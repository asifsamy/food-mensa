{"version":3,"sources":["components/Reviews/Reviews.module.css","components/Reviews/NewReviewForm.js","components/Reviews/NewReview.js","components/Reviews/ReviewsList.js","components/Reviews/Reviews.js","pages/customer/DishItemDetail.js"],"names":["module","exports","isNotEmpty","value","NewReviewForm","props","stars","Array","fill","useState","ratingValue","setRatingValue","undefined","hoverValue","setHoverValue","ratingHoverLeaveHandler","useInput","nameValue","nameIsValid","isValid","nameHasError","hasError","nameChangeHandler","valueChangeHandler","nameBlurHandler","inputBlurHandler","resetName","reset","commentValue","commentChangeHandler","commentBlurHandler","resetComment","formIsValid","className","newItemStyles","form","onSubmit","event","preventDefault","today","Date","onConfirm","name","comment","rating","date","getFullYear","getMonth","getDate","Input","label","id","type","onChange","onBlur","errorStyling","invalid","map","_","index","size","style","marginRight","marginTop","marginBottom","cursor","color","onClick","onMouseOver","onMouseLeave","actions","Button","buttonStyle","disabled","NewReview","isAdded","setIsAdded","isModalOn","setIsModalOn","dishId","useParams","useHttp","isAdding","isLoading","addError","error","addNewReviewRequest","sendRequest","hideModalHandler","reviewModalState","addnewReviewResponse","newReview","newReviewData","createdReview","onAddNewReview","creatNewReviewHandler","a","url","method","headers","body","description","bind","addReviewModalForm","loaderContent","LoadingSpinner","addedItemModal","errorAddingModal","Modal","onClose","ReviewItem","review","reviewDate","newDate","month","toLocaleString","day","year","transformDate","classes","user","ReviewsList","reviews","Reviews","reviewsContent","availableReviews","setAvailableReviews","addNewReviewModal","setAddnewReviewModal","fetchAllReviews","useEffect","reviewsObj","loadedReviews","key","push","length","addedNewReview","prevState","concat","DishItemDetail","dishItem","setDishItem","cartCtx","useContext","CartContext","match","useRouteMatch","fecthSingleDishItem","dishObj","dishStyles","dishesLoading","fetchDishesError","Helmet","content","cartIsVisible","Cart","hideCart","onHideCart","dishes","Card","DishItem","price","path","exact","to"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,wB,0PCQnFC,EAAa,SAACC,GAAD,MAAqB,KAAVA,GA2HfC,EAzHO,SAACC,GACrB,IAAMC,EAAQC,MAAM,GAAGC,KAAK,GAC5B,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,wBAASG,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUMC,EAA0B,WAC9BD,OAAcF,IAGhB,EAOII,YAASd,GANJe,EADT,EACEd,MACSe,EAFX,EAEEC,QACUC,EAHZ,EAGEC,SACoBC,EAJtB,EAIEC,mBACkBC,EALpB,EAKEC,iBACOC,EANT,EAMEC,MAGF,EAKIX,YAASd,GAJJ0B,EADT,EACEzB,MACoB0B,EAFtB,EAEEN,mBACkBO,EAHpB,EAGEL,iBACOM,EAJT,EAIEJ,MAGEK,GAAc,EACdd,IACFc,GAAc,GA6BhB,OACE,uBAAMC,UAAWC,IAAcC,KAAMC,SA3Bb,SAACC,GAEzB,GADAA,EAAMC,iBACDN,EAAL,CAIA,IAAMO,EAAQ,IAAIC,KAClBnC,EAAMoC,UAAU,CACdC,KAAMzB,EACN0B,QAASf,EACTgB,OAAQlC,EACRmC,KACEN,EAAMO,cACN,KACCP,EAAMQ,WAAa,GACpB,IACAR,EAAMS,cAWV,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,OACNC,GAAG,OACHC,KAAK,OACLjD,MAAOc,EACPoC,SAAU/B,EACVgC,OAAQ9B,EACR+B,aAAcnC,IAEfA,GACC,mBAAGa,UAAWC,IAAcsB,QAA5B,oCAEF,4BACE,8CAEDlD,EAAMmD,KAAI,SAACC,EAAGC,GAAJ,OACT,cAAC,IAAD,CAEEC,KAAK,SACLC,MAAO,CACLC,YAAa,MACbC,UAAW,UACXC,aAAc,SACdC,OAAQ,WAEVC,OAAQrD,GAAcH,GAAeiD,EAAQ,SAAW,OACxDQ,QAAS,WAtFfxD,EAsFwCgD,EAAQ,IAC1CS,YAAa,WAnFnBtD,EAmF4C6C,EAAQ,IAC9CU,aAActD,GAXT4C,MAcT,cAACV,EAAA,EAAD,CACEC,MAAM,UACNC,GAAG,UACHC,KAAK,WACLjD,MAAOyB,EACPyB,SAAUxB,EACVyB,OAAQxB,IAEV,sBAAKG,UAAWC,IAAcoC,QAA9B,UACE,cAACC,EAAA,EAAD,CAAQC,YAAY,gBAAgBL,QAhDrB,WACnBzC,IACAf,EAAe,GACfoB,KA6CI,mBAGA,cAACwC,EAAA,EAAD,CACEC,YAAY,iBACZpB,KAAK,SACLqB,UAAWzC,EAHb,oCCVO0C,EArGG,SAACrE,GACjB,MAA8BI,oBAAS,GAAvC,mBAAOkE,EAAP,KAAgBC,EAAhB,KACA,EAAkCnE,oBAAS,GAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KAEQC,EADOC,cACPD,OAER,EAIIE,cAHSC,EADb,EACEC,UACOC,EAFT,EAEEC,MACaC,EAHf,EAGEC,YAGIC,EAAmB,WACvBV,GAAa,GACbF,GAAW,GACXvE,EAAMoF,kBAAiB,IAGnBC,EAAuB,SAACC,EAAWC,GACvChB,GAAW,GACX,IAEMiB,EAAgB,CACpB1C,GAHkByC,EAAclD,KAIhCA,KAAMiD,EAAUjD,KAChBC,QAASgD,EAAUhD,QACnBC,OAAQ+C,EAAU/C,OAClBC,KAAM8C,EAAU9C,MAGlBxC,EAAMyF,eAAeD,IAGjBE,EAAqB,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,sDAC5BV,EACE,CACEW,IAAI,+DAAD,OAAiElB,EAAjE,SACHmB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACJ1D,KAAMiD,EAAUjD,KAChB2D,YAAaV,EAAUhD,QACvBC,OAAQ+C,EAAU/C,OAClBC,KAAM8C,EAAU9C,OAGpB6C,EAAqBY,KAAK,KAAMX,IAbN,2CAAH,sDAkBrBY,EACJ,eAAC,WAAD,WACE,cAAC,EAAD,CAAe9D,UAAWsD,IAC1B,qBAAK9D,UAAWC,IAAcoC,QAA9B,SACE,cAACC,EAAA,EAAD,CAAQC,YAAY,iBAAiBL,QAASqB,EAA9C,wBAQAgB,EACJ,qBAAKvE,UAAU,WAAf,SACE,cAACwE,EAAA,EAAD,MAKEC,EACJ,eAAC,WAAD,WACE,oGACA,qBAAKzE,UAAWC,IAAcoC,QAA9B,SACE,cAACC,EAAA,EAAD,CAAQC,YAAY,iBAAiBL,QAASqB,EAA9C,wBAOAmB,EACJ,qBAAK1E,UAAWC,IAAcoC,QAA9B,SACE,mBAAGrC,UAAWC,IAAcsB,QAA5B,SAAsC4B,MAI1C,OACE,cAAC,WAAD,UACGP,GACC,eAAC+B,EAAA,EAAD,CAAOC,QAASrB,EAAhB,WACIN,IAAaP,GAAW4B,EACzBrB,GAAYsB,GACXtB,GAAYP,GAAW+B,EACxBtB,GAAYuB,Q,iBCtFjBG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdzG,EAAQC,MAAM,GAAGC,KAAK,GAEtBwG,EAhBc,SAACnE,GACrB,IAAMoE,EAAU,IAAIzE,KAAKK,GAKzB,MAAO,CACLqE,MALYD,EAAQE,eAAe,QAAS,CAAED,MAAO,SAMrDE,IALUH,EAAQE,eAAe,QAAS,CAAEC,IAAK,YAMjDC,KALWJ,EAAQnE,eAYFwE,CAAcP,EAAOlE,MAExC,OACE,+BACE,sBAAKZ,UAAWsF,IAAQC,KAAxB,UACE,cAAC,IAAD,CAAc5D,KAAK,SAASM,MAAM,SAClC,6BAAK6C,EAAOrE,UAEbpC,EAAMmD,KAAI,SAACC,EAAGC,GAAJ,OACT,cAAC,IAAD,CAAoBO,MAAO6C,EAAOnE,OAASe,EAAQ,SAAW,QAAjDA,MAEf,sBAAK1B,UAAWsF,IAAQ1E,KAAxB,wBACcmE,EAAWI,IADzB,IAC+BJ,EAAWE,MAD1C,IACkDF,EAAWK,QAE7D,4BAAIN,EAAOpE,cAaF8E,EARK,SAAC,GAKnB,OALmC,EAAdC,QACMjE,KAAI,SAACsD,GAAD,OAC7B,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAO5D,QCwDbwE,EAzFC,WACd,IA+CIC,EA/CJ,EAAgDnH,mBAAS,IAAzD,mBAAOoH,EAAP,KAAyBC,EAAzB,KACA,EAAkDrH,oBAAS,GAA3D,mBAAOsH,EAAP,KAA0BC,EAA1B,KAGQjD,EADOC,cACPD,OAER,EAA2DE,cAAnDE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAAoB4C,EAAvC,EAA0B1C,YA6B1B,GA3BA2C,qBAAU,WAiBRD,EACE,CACEhC,IAAI,+DAAD,OAAiElB,EAAjE,WAlBkB,SAACoD,GACxB,IAAMC,EAAgB,GAEtB,IAAK,IAAMC,KAAOF,EAChBC,EAAcE,KAAK,CACjBnF,GAAIkF,EACJ3F,KAAMyF,EAAWE,GAAK3F,KACtBE,OAAQuF,EAAWE,GAAKzF,OACxBC,KAAMsF,EAAWE,GAAKxF,KACtBF,QAASwF,EAAWE,GAAK1F,UAI7BmF,EAAoBM,QASrB,CAACH,EAAiBlD,IAIjBI,EACF,OACE,qBAAKlD,UAAU,WAAf,SACE,cAACwE,EAAA,EAAD,MAKN,GAAIpB,EACF,OAAO,qBAAKpD,UAAU,WAAf,SAA2BoD,IAIJ,IAA5BwC,EAAiBU,SACnBX,EAAiB,mBAAG3F,UAAU,WAAb,qCAGf4F,EAAiBU,OAAS,IAC5BX,EAAiB,cAAC,EAAD,CAAaF,QAASG,KAWzC,OACE,eAAC,WAAD,WACGE,GACC,cAAC,EAAD,CACEtC,iBAAkBuC,EAClBlC,eATqB,SAAC0C,GAC5BV,GAAoB,SAACW,GAAD,OAAeA,EAAUC,OAAOF,SAWlD,0BAASvG,UAAWsF,IAAQG,QAA5B,UACE,qBAAKzF,UAAU,WAAf,SACE,wBACEA,UAAU,aACVmB,KAAK,SACLe,QArBoB,WAC5B6D,GAAqB,IAiBf,6BAQF,6BAAKJ,WCNEe,UAvEQ,SAACtI,GACtB,MAAgCI,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,qBAAWC,KACrBC,EAAQC,cAENnE,EADOC,cACPD,OACR,EAA+DE,cAAvDE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAAoB8D,EAAvC,EAA0B5D,YAe1B,OAbA2C,qBAAU,WAKRiB,EACE,CACElD,IAAI,8DAAD,OAAgElB,EAAhE,WANmB,SAACqE,GACzBP,EAAYO,QASb,CAACD,EAAqBpE,IAErBI,EAEA,yBAASlD,UAAWoH,IAAWC,cAA/B,SACE,cAAC7C,EAAA,EAAD,MAKFpB,EAEA,yBAASpD,UAAWoH,IAAWE,iBAA/B,SACE,4BAAIlE,MAMR,eAAC,WAAD,WACE,eAACmE,EAAA,EAAD,WACE,gEACA,sBACE9G,KAAK,cACL+G,QAAQ,6DAGXX,EAAQY,eAAiB,cAACC,EAAA,EAAD,CAAMC,SAAUvJ,EAAMwJ,aAChD,0BAAS5H,UAAWoH,IAAWS,OAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE7G,GAAI4B,EACJrC,KAAMkG,EAASlG,KACf2D,YAAauC,EAASvC,YACtB4D,MAAOrB,EAASqB,UAGpB,cAAC,IAAD,CAAOC,KAAMjB,EAAMiB,KAAMC,OAAK,EAA9B,SACE,qBAAKlI,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYmI,GAAE,UAAKnB,EAAMhD,IAAX,YAA9B,8BAKJ,cAAC,IAAD,CAAOiE,KAAI,UAAKjB,EAAMiB,KAAX,YAAX,SACE,cAAC,EAAD","file":"static/js/8.f7a2cf76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Reviews_reviews__H8KZ-\",\"user\":\"Reviews_user__3TC9s\",\"date\":\"Reviews_date__1CaXN\"};","import { FaStar } from \"react-icons/fa\";\r\n\r\nimport useInput from \"../../hooks/use-input\";\r\nimport Button from \"../UI/FormFields/Button\";\r\nimport Input from \"../UI/FormFields/Input\";\r\n\r\nimport newItemStyles from \"../Dishes/DishItem/NewDishItemForm.module.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst isNotEmpty = (value) => value !== \"\";\r\n\r\nconst NewReviewForm = (props) => {\r\n  const stars = Array(5).fill(0);\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n  const [hoverValue, setHoverValue] = useState(undefined);\r\n\r\n  const ratingClickHandler = (value) => {\r\n    setRatingValue(value);\r\n  };\r\n\r\n  const ratingHoverHandler = (value) => {\r\n    setHoverValue(value);\r\n  };\r\n\r\n  const ratingHoverLeaveHandler = () => {\r\n    setHoverValue(undefined);\r\n  };\r\n\r\n  const {\r\n    value: nameValue,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetName,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: commentValue,\r\n    valueChangeHandler: commentChangeHandler,\r\n    inputBlurHandler: commentBlurHandler,\r\n    reset: resetComment,\r\n  } = useInput(isNotEmpty);\r\n\r\n  let formIsValid = false;\r\n  if (nameIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    const today = new Date();\r\n    props.onConfirm({\r\n      name: nameValue,\r\n      comment: commentValue,\r\n      rating: ratingValue,\r\n      date:\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate(),\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    resetName();\r\n    setRatingValue(0);\r\n    resetComment();\r\n  };\r\n\r\n  return (\r\n    <form className={newItemStyles.form} onSubmit={formSubmitHandler}>\r\n      <Input\r\n        label=\"Name\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n        value={nameValue}\r\n        onChange={nameChangeHandler}\r\n        onBlur={nameBlurHandler}\r\n        errorStyling={nameHasError}\r\n      />\r\n      {nameHasError && (\r\n        <p className={newItemStyles.invalid}>Name can not be empty!</p>\r\n      )}\r\n      <p>\r\n        <strong>Rating</strong>\r\n      </p>\r\n      {stars.map((_, index) => (\r\n        <FaStar\r\n          key={index}\r\n          size=\"1.5rem\"\r\n          style={{\r\n            marginRight: \"5px\",\r\n            marginTop: \"-0.3rem\",\r\n            marginBottom: \"0.7rem\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          color={(hoverValue || ratingValue) > index ? \"orange\" : \"grey\"}\r\n          onClick={() => ratingClickHandler(index + 1)}\r\n          onMouseOver={() => ratingHoverHandler(index + 1)}\r\n          onMouseLeave={ratingHoverLeaveHandler}\r\n        />\r\n      ))}\r\n      <Input\r\n        label=\"Comment\"\r\n        id=\"comment\"\r\n        type=\"textarea\"\r\n        value={commentValue}\r\n        onChange={commentChangeHandler}\r\n        onBlur={commentBlurHandler}\r\n      />\r\n      <div className={newItemStyles.actions}>\r\n        <Button buttonStyle=\"button--reset\" onClick={resetHandler}>\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          buttonStyle=\"button--submit\"\r\n          type=\"submit\"\r\n          disabled={!formIsValid}\r\n        >\r\n          Submit Feedback\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewReviewForm;\r\n","import { Fragment, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport newItemStyles from \"../Dishes/DishItem/DishItemActions.module.css\";\r\nimport Button from \"../UI/FormFields/Button\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Modal from \"../UI/Modal\";\r\nimport NewReviewForm from \"./NewReviewForm\";\r\n\r\nconst NewReview = (props) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [isModalOn, setIsModalOn] = useState(true);\r\n  const params = useParams();\r\n  const { dishId } = params;\r\n\r\n  const {\r\n    isLoading: isAdding,\r\n    error: addError,\r\n    sendRequest: addNewReviewRequest,\r\n  } = useHttp();\r\n\r\n  const hideModalHandler = () => {\r\n    setIsModalOn(false);\r\n    setIsAdded(false);\r\n    props.reviewModalState(false);\r\n  };\r\n\r\n  const addnewReviewResponse = (newReview, newReviewData) => {\r\n    setIsAdded(true);\r\n    const generatedId = newReviewData.name; // firebase-specific => \"name\" contains generated id\r\n\r\n    const createdReview = {\r\n      id: generatedId,\r\n      name: newReview.name,\r\n      comment: newReview.comment,\r\n      rating: newReview.rating,\r\n      date: newReview.date,\r\n    };\r\n\r\n    props.onAddNewReview(createdReview);\r\n  };\r\n\r\n  const creatNewReviewHandler = async (newReview) => {\r\n    addNewReviewRequest(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/reviews/${dishId}.json`,\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: {\r\n          name: newReview.name,\r\n          description: newReview.comment,\r\n          rating: newReview.rating,\r\n          date: newReview.date,\r\n        },\r\n      },\r\n      addnewReviewResponse.bind(null, newReview)\r\n    );\r\n  };\r\n\r\n  // To show the insert form in the modal\r\n  const addReviewModalForm = (\r\n    <Fragment>\r\n      <NewReviewForm onConfirm={creatNewReviewHandler} />\r\n      <div className={newItemStyles.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  // immidiately after sending the request\r\n  const loaderContent = (\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  );\r\n\r\n  // When the request is sent successfully\r\n  const addedItemModal = (\r\n    <Fragment>\r\n      <p>A New Review is added successfully! Reload the page to see changes!</p>\r\n      <div className={newItemStyles.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const errorAddingModal = (\r\n    <div className={newItemStyles.actions}>\r\n      <p className={newItemStyles.invalid}>{addError}</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {isModalOn && (\r\n        <Modal onClose={hideModalHandler}>\r\n          {!isAdding && !isAdded && addReviewModalForm}\r\n          {isAdding && loaderContent}\r\n          {!isAdding && isAdded && addedItemModal}\r\n          {addError && errorAddingModal}\r\n        </Modal>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewReview;\r\n","import { FaUserCircle, FaStar } from \"react-icons/fa\";\r\n\r\nimport classes from \"./Reviews.module.css\";\r\n\r\nconst transformDate = (date) => {\r\n  const newDate = new Date(date);\r\n  const month = newDate.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = newDate.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = newDate.getFullYear();\r\n\r\n  return {\r\n    month,\r\n    day,\r\n    year,\r\n  };\r\n};\r\n\r\nconst ReviewItem = ({ review }) => {\r\n  const stars = Array(5).fill(0);\r\n\r\n  const reviewDate = transformDate(review.date);\r\n\r\n  return (\r\n    <li>\r\n      <div className={classes.user}>\r\n        <FaUserCircle size=\"1.7rem\" color=\"grey\" />\r\n        <h5>{review.name}</h5>\r\n      </div>\r\n      {stars.map((_, index) => (\r\n        <FaStar key={index} color={review.rating > index ? \"orange\" : \"grey\"} />\r\n      ))}\r\n      <div className={classes.date}>\r\n        Reviewd on {reviewDate.day} {reviewDate.month} {reviewDate.year}\r\n      </div>\r\n      <p>{review.comment}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ReviewsList = ({ reviews }) => {\r\n  const reviewItem = reviews.map((review) => (\r\n    <ReviewItem key={review.id} review={review} />\r\n  ));\r\n\r\n  return reviewItem;\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport NewReview from \"./NewReview\";\r\nimport classes from \"./Reviews.module.css\";\r\nimport ReviewsList from \"./ReviewsList\";\r\n\r\nconst Reviews = () => {\r\n  const [availableReviews, setAvailableReviews] = useState([]);\r\n  const [addNewReviewModal, setAddnewReviewModal] = useState(false);\r\n\r\n  const params = useParams();\r\n  const { dishId } = params;\r\n\r\n  const { isLoading, error, sendRequest: fetchAllReviews } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const transformReviews = (reviewsObj) => {\r\n      const loadedReviews = [];\r\n\r\n      for (const key in reviewsObj) {\r\n        loadedReviews.push({\r\n          id: key,\r\n          name: reviewsObj[key].name,\r\n          rating: reviewsObj[key].rating,\r\n          date: reviewsObj[key].date,\r\n          comment: reviewsObj[key].comment,\r\n        });\r\n      }\r\n\r\n      setAvailableReviews(loadedReviews);\r\n    };\r\n\r\n    fetchAllReviews(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/reviews/${dishId}.json`,\r\n      },\r\n      transformReviews\r\n    );\r\n  }, [fetchAllReviews, dishId]);\r\n\r\n  //   console.log(\"length:\", availableReviews.length);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"centered\">{error}</div>;\r\n  }\r\n\r\n  let reviewsContent;\r\n  if (availableReviews.length === 0) {\r\n    reviewsContent = <p className=\"centered\">No reviews were given!</p>;\r\n  }\r\n\r\n  if (availableReviews.length > 0) {\r\n    reviewsContent = <ReviewsList reviews={availableReviews} />;\r\n  }\r\n\r\n  const newReviewModalHandler = () => {\r\n    setAddnewReviewModal(true);\r\n  };\r\n\r\n  const newRevewAddedHandler = (addedNewReview) => {\r\n    setAvailableReviews((prevState) => prevState.concat(addedNewReview));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {addNewReviewModal && (\r\n        <NewReview\r\n          reviewModalState={setAddnewReviewModal}\r\n          onAddNewReview={newRevewAddedHandler}\r\n        />\r\n      )}\r\n      <section className={classes.reviews}>\r\n        <div className=\"centered\">\r\n          <button\r\n            className=\"uni-button\"\r\n            type=\"button\"\r\n            onClick={newReviewModalHandler}\r\n          >\r\n            Give Feedback\r\n          </button>\r\n        </div>\r\n        <ul>{reviewsContent}</ul>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useRouteMatch, Route, Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\n\r\nimport dishStyles from \"../../components/Dishes/AvailableDishes.module.css\";\r\nimport DishItem from \"../../components/Dishes/DishItem/DishItem\";\r\nimport Cart from \"../../components/Cart/Cart\";\r\nimport Reviews from \"../../components/Reviews/Reviews\";\r\n\r\nconst DishItemDetail = (props) => {\r\n  const [dishItem, setDishItem] = useState({});\r\n  const cartCtx = useContext(CartContext);\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const { dishId } = params;\r\n  const { isLoading, error, sendRequest: fecthSingleDishItem } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const transformDishItem = (dishObj) => {\r\n      setDishItem(dishObj);\r\n    };\r\n\r\n    fecthSingleDishItem(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/dishes/${dishId}.json`,\r\n      },\r\n      transformDishItem\r\n    );\r\n  }, [fecthSingleDishItem, dishId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={dishStyles.dishesLoading}>\r\n        <LoadingSpinner />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <section className={dishStyles.fetchDishesError}>\r\n        <p>{error}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Food Mensa - Delicious Meal</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Food Mensa. Order your meal and enjoy delicious food.\"\r\n        />\r\n      </Helmet>\r\n      {cartCtx.cartIsVisible && <Cart hideCart={props.onHideCart} />}\r\n      <section className={dishStyles.dishes}>\r\n        <Card>\r\n          <DishItem\r\n            id={dishId}\r\n            name={dishItem.name}\r\n            description={dishItem.description}\r\n            price={dishItem.price}\r\n          />\r\n        </Card>\r\n        <Route path={match.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to={`${match.url}/reviews`}>\r\n              Load Reviews\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${match.path}/reviews`}>\r\n          <Reviews />\r\n        </Route>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DishItemDetail;\r\n"],"sourceRoot":""}