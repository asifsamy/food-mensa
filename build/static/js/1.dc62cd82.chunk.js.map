{"version":3,"sources":["hooks/use-http.js","components/UI/FormFields/Button.js","components/UI/Modal.js","components/Dishes/DishItem/DishItemActions.module.css","components/UI/Card.js","components/Dishes/AvailableDishes.module.css","components/UI/FormFields/Button.module.css","components/UI/Card.module.css","components/Dishes/DishItem/NewDishItemForm.js","components/Dishes/DishItem/NewDishItemForm.module.css","components/Reviews/RatingLogic.js","components/Reviews/Rating.js","components/Dishes/DishItem/DeleteDishItem.js","components/Dishes/DishItem/DishItemActions.js","components/Dishes/DishItem/DishItemForm.js","components/Dishes/DishItem/DishItem.js","components/UI/Modal.module.css","components/Dishes/DishItem/DishItem.module.css","components/Dishes/DishItem/DishItemForm.module.css","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Cart/Checkout.module.css"],"names":["useHttp","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","requestConfig","applyData","a","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","Button","props","STYLES","buttonStyle","includes","className","classes","button","type","onClick","disabled","children","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","module","exports","Card","card","isNotEmpty","value","isNotNegetive","NewDishItemForm","useInput","item","name","nameValue","nameIsValid","isValid","nameHasError","hasError","nameChangeHandler","valueChangeHandler","nameBlurHandler","inputBlurHandler","resetName","reset","description","descriptionValue","descriptionIsValid","descriptionHasError","descriptionChangeHandler","descriptionBlurHandler","resetDescription","price","priceValue","priceIsValid","priceHasError","priceChangeHandler","priceBlurHandler","resetPrice","formIsValid","form","onSubmit","event","preventDefault","onConfirm","label","id","onChange","onBlur","errorStyling","invalid","min","step","actions","getStar","color","getStars","stars","parseFloat","toString","split","whole","part","i","push","RatingLogic","ratingValue","map","index","Rating","dishItemId","setRatingValue","fecthAllRatings","useEffect","ratingObjects","loadedRatings","key","rating","length","transformedValue","fractionValue","Math","abs","floor","ceil","transformRatings","Number","toFixed","DeleteDishItem","isModalOn","setIsModalOn","isDeleted","setIsDeleted","isDeleting","deleteError","deleteDishItemRequest","hideModalHandler","callDeleteState","deleteDishItemResponse","deleteById","confirmDeleteModal","showLoadingSpinner","LoadingSpinner","deleteSucceedModal","deleteErrorModal","DishItemActions","didUpdate","setDidUpdate","callDeleteComponent","setCallDeleteComponent","isUpdating","updateError","updateDishItemRequest","updateDishItemResponse","updatedDishItem","onUpdateItem","updateDishItemHandler","bind","updateFormModal","isUpdatingModal","didUpdateModal","errorUpdatingModal","deleteComponent","onDelete","DishItemForm","amountInputRef","useRef","amountIsValid","setAmountIsValid","enteredAmount","current","enteredAmountNumber","trim","onAddToCart","input","htmlFor","ref","max","defaultValue","DishItem","itemState","setItemState","location","useLocation","adminUrl","test","pathname","cartCtx","useContext","CartContext","dishItem","dish","to","updatedItem","onDeleteItem","amount","addItem","CartItem","summary","onRemove","onAdd","isFiveChars","Checkout","streetValue","streetIsValid","streetHasError","streetChangeHandler","streetBlurHandler","cityValue","cityIsValid","cityHasError","cityChangeHandler","cityBlurHandler","postCodeValue","postCodeIsValid","postCodeHasError","postCodeChangeHandler","postCodeBlurHandler","street","city","postalCode","Input","cartVisibility","Cart","isCheckout","setIsCheckout","didSubmit","setDidSubmit","isSubmitting","submitError","sendOrderRequest","totalAmount","hasItems","items","cartItemRemoveHandler","removeItem","cartItemAddHandler","hideCartHandler","cartItems","modalActions","createOrder","userData","console","log","clearCart","submitOrderHandler","user","dishItems","status","cartModalContent","Fragment","total","isSubmittingModalContent","didSubmitModalContent","errorSubmittedModalContent"],"mappings":"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","file":"static/js/1.dc62cd82.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const STYLES = [\r\n    \"button--submit\",\r\n    \"button--cancel\",\r\n    \"button--reset\",\r\n    \"button--edit\",\r\n    \"button--delete\",\r\n  ];\r\n\r\n  const buttonStyle = STYLES.includes(props.buttonStyle)\r\n    ? props.buttonStyle\r\n    : STYLES[0];\r\n\r\n  return (\r\n    <button\r\n      className={`${classes.button} ${classes[buttonStyle]}`}\r\n      // className={classes.button}\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled || false}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"DishItemActions_actions__2WXUm\",\"invalid\":\"DishItemActions_invalid__3QL1c\"};","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dishes\":\"AvailableDishes_dishes__Csb6N\",\"dishes-appear\":\"AvailableDishes_dishes-appear__3Pufg\",\"dishesLoading\":\"AvailableDishes_dishesLoading__c-p27\",\"fetchDishesError\":\"AvailableDishes_fetchDishesError__svuCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2jVP6\",\"button--cancel\":\"Button_button--cancel__lkgVB\",\"button--reset\":\"Button_button--reset__1xpYZ\",\"button--submit\":\"Button_button--submit__c9QIc\",\"button--edit\":\"Button_button--edit__2Td8g\",\"button--delete\":\"Button_button--delete__1_Zsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__YEWXs\"};","import useInput from \"../../../hooks/use-input\";\r\nimport Button from \"../../UI/FormFields/Button\";\r\nimport Input from \"../../UI/FormFields/Input\";\r\nimport classes from \"./NewDishItemForm.module.css\";\r\n\r\n// some validation rules\r\nconst isNotEmpty = (value) => value !== \"\";\r\nconst isNotNegetive = (value) => value > 0;\r\n\r\nconst NewDishItemForm = (props) => {\r\n  const {\r\n    value: nameValue,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetName,\r\n  } = useInput(isNotEmpty, props.item ? props.item.name : \"\");\r\n\r\n  const {\r\n    value: descriptionValue,\r\n    isValid: descriptionIsValid,\r\n    hasError: descriptionHasError,\r\n    valueChangeHandler: descriptionChangeHandler,\r\n    inputBlurHandler: descriptionBlurHandler,\r\n    reset: resetDescription,\r\n  } = useInput(isNotEmpty, props.item ? props.item.description : \"\");\r\n\r\n  const {\r\n    value: priceValue,\r\n    isValid: priceIsValid,\r\n    hasError: priceHasError,\r\n    valueChangeHandler: priceChangeHandler,\r\n    inputBlurHandler: priceBlurHandler,\r\n    reset: resetPrice,\r\n  } = useInput(isNotNegetive, props.item ? props.item.price : \"\");\r\n\r\n  // Check if all the inputs are valid\r\n  let formIsValid = false;\r\n  if (nameIsValid && descriptionIsValid && priceIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: nameValue,\r\n      description: descriptionValue,\r\n      price: priceValue,\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    resetDescription();\r\n    resetName();\r\n    resetPrice();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.form} onSubmit={formSubmitHandler}>\r\n        <Input\r\n          label=\"Name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={nameValue}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameBlurHandler}\r\n          errorStyling={nameHasError}\r\n        />\r\n        {nameHasError && (\r\n          <p className={classes.invalid}>Please enter a valid name!</p>\r\n        )}\r\n        <Input\r\n          label=\"Description\"\r\n          id=\"description\"\r\n          type=\"textarea\"\r\n          value={descriptionValue}\r\n          onChange={descriptionChangeHandler}\r\n          onBlur={descriptionBlurHandler}\r\n          errorStyling={descriptionHasError}\r\n        />\r\n        {descriptionHasError && (\r\n          <p className={classes.invalid}>Please enter a valid name!</p>\r\n        )}\r\n        <Input\r\n          label=\"Price\"\r\n          id=\"price\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          step=\"any\"\r\n          value={priceValue}\r\n          onChange={priceChangeHandler}\r\n          onBlur={priceBlurHandler}\r\n          errorStyling={priceHasError}\r\n        />\r\n        {priceHasError && (\r\n          <p className={classes.invalid}>Please enter a valid name!</p>\r\n        )}\r\n        <div className={classes.actions}>\r\n          <Button buttonStyle=\"button--reset\" onClick={resetHandler}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            buttonStyle=\"button--edit\"\r\n            type=\"submit\"\r\n            disabled={!formIsValid}\r\n          >\r\n            {props.item ? \"Update\" : \"Add New Dish\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDishItemForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewDishItemForm_form__W9czV\",\"actions\":\"NewDishItemForm_actions__1xZvE\",\"invalid\":\"NewDishItemForm_invalid__3k6oU\"};","import { Fragment } from \"react\";\r\nimport { FaStar, FaStarHalfAlt } from \"react-icons/fa\";\r\n\r\nconst getStar = (value) => {\r\n  switch (value) {\r\n    case 0:\r\n      return <FaStar color=\"grey\" />;\r\n    case 50:\r\n      return <FaStarHalfAlt color=\"orange\" />;\r\n    case 100:\r\n      return <FaStar color=\"orange\" />;\r\n\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nconst getStars = (value) => {\r\n  const stars = [];\r\n  const [whole, part] = parseFloat(value).toString().split(\".\");\r\n\r\n  for (let i = 0; i < whole; i++) {\r\n    stars.push(100);\r\n  }\r\n  if (part) {\r\n    stars.push(50);\r\n  }\r\n  for (let i = whole; i < (part ? 4 : 5); i++) {\r\n    stars.push(0);\r\n  }\r\n\r\n  return stars;\r\n};\r\n\r\nconst RatingLogic = ({ ratingValue }) => {\r\n  return (\r\n    <Fragment>\r\n      {getStars(ratingValue).map((value, index) => (\r\n        <span key={index}>{getStar(value)}</span>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RatingLogic;\r\n","import { useEffect, useState } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport RatingLogic from \"./RatingLogic\";\r\n\r\nconst Rating = ({ dishItemId }) => {\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n\r\n  const { sendRequest: fecthAllRatings } = useHttp();\r\n\r\n  const transformRatings = (value) => {\r\n    let fractionValue = Math.abs(value) - Math.floor(value);\r\n    if (fractionValue >= 0 && fractionValue < 0.26) {\r\n      value = Math.floor(value);\r\n    } else if (fractionValue > 0.75 && fractionValue < 1) {\r\n      value = Math.ceil(value);\r\n    } else {\r\n      value = Math.floor(value) + 0.5;\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getRatings = (ratingObjects) => {\r\n      const loadedRatings = [];\r\n\r\n      let value = 0;\r\n      for (const key in ratingObjects) {\r\n        loadedRatings.push(ratingObjects[key].rating);\r\n        value += ratingObjects[key].rating;\r\n      }\r\n\r\n      if (loadedRatings.length > 0) {\r\n        const transformedValue = transformRatings(\r\n          Number(value / loadedRatings.length).toFixed(2)\r\n        );\r\n\r\n        setRatingValue(transformedValue);\r\n      }\r\n    };\r\n\r\n    fecthAllRatings(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/reviews/${dishItemId}.json`,\r\n      },\r\n      getRatings\r\n    );\r\n  }, [dishItemId, fecthAllRatings]);\r\n\r\n  //   console.log(\"Rating: \", ratingValue);\r\n\r\n  return <RatingLogic ratingValue={ratingValue} />;\r\n};\r\n\r\nexport default Rating;\r\n","import { Fragment, useState } from \"react\";\r\nimport useHttp from \"../../../hooks/use-http\";\r\nimport Button from \"../../UI/FormFields/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport classes from \"./DishItemActions.module.css\";\r\n\r\nconst DeleteDishItem = (props) => {\r\n  const [isModalOn, setIsModalOn] = useState(true);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n  // Destructuring from useHttp custom hook for processing post request (send data)\r\n  const {\r\n    isLoading: isDeleting,\r\n    error: deleteError,\r\n    sendRequest: deleteDishItemRequest,\r\n  } = useHttp();\r\n\r\n  const hideModalHandler = () => {\r\n    setIsModalOn(false);\r\n    setIsDeleted(false);\r\n    props.callDeleteState(false);\r\n  };\r\n  //   console.log(\"isModalOn from DeleteDishItem: \", isModalOn);\r\n\r\n  const deleteDishItemResponse = () => {\r\n    setIsDeleted(true);\r\n    // state up to its' parent components -- up to AvailableDishes component\r\n    props.deleteById(props.id);\r\n  };\r\n\r\n  const deleteDishItemHandler = () => {\r\n    deleteDishItemRequest(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/dishes/${props.id}.json`,\r\n        method: \"DELETE\",\r\n      },\r\n      deleteDishItemResponse\r\n    );\r\n  };\r\n\r\n  // Delete confirmation - not yet deleted\r\n  const confirmDeleteModal = (\r\n    <Fragment>\r\n      <p>Are you sure! You want to delete this dish item!</p>\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Cancel\r\n        </Button>\r\n        <Button buttonStyle=\"button--delete\" onClick={deleteDishItemHandler}>\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  // immidiately after sending the request\r\n  const showLoadingSpinner = (\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  );\r\n\r\n  // deleted successfully - show a success message\r\n  const deleteSucceedModal = (\r\n    <Fragment>\r\n      <p>\r\n        The Dish item has been deleted successfully!Reload the page to see the\r\n        changes!\r\n      </p>\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const deleteErrorModal = (\r\n    <div className={classes.actions}>\r\n      <p className={classes.invalid}>{deleteError}</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isModalOn && (\r\n        <Modal onClose={hideModalHandler}>\r\n          {!isDeleted && !isDeleting && !deleteError && confirmDeleteModal}\r\n          {isDeleting && showLoadingSpinner}\r\n          {isDeleted && !isDeleting && deleteSucceedModal}\r\n          {deleteError && deleteErrorModal}\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDishItem;\r\n","import { Fragment, useState } from \"react\";\r\nimport useHttp from \"../../../hooks/use-http\";\r\nimport Button from \"../../UI/FormFields/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nimport classes from \"./DishItemActions.module.css\";\r\nimport DeleteDishItem from \"./DeleteDishItem\";\r\nimport NewDishItemForm from \"./NewDishItemForm\";\r\n\r\nconst DishItemActions = (props) => {\r\n  const [isModalOn, setIsModalOn] = useState(false);\r\n  const [didUpdate, setDidUpdate] = useState(false);\r\n  const [callDeleteComponent, setCallDeleteComponent] = useState(false);\r\n\r\n  const {\r\n    isLoading: isUpdating,\r\n    error: updateError,\r\n    sendRequest: updateDishItemRequest,\r\n  } = useHttp();\r\n\r\n  const showUpdateModal = () => {\r\n    setIsModalOn(true);\r\n  };\r\n\r\n  const hideModalHandler = () => {\r\n    setIsModalOn(false);\r\n    setDidUpdate(false);\r\n  };\r\n\r\n  const updateDishItemResponse = (updatedDishItem) => {\r\n    setDidUpdate(true);\r\n    // pass the updated value for updating local state\r\n    props.onUpdateItem({\r\n      id: props.item.id,\r\n      name: updatedDishItem.name,\r\n      description: updatedDishItem.description,\r\n      price: updatedDishItem.price,\r\n    });\r\n  };\r\n\r\n  const updateDishItemHandler = async (updatedDishItem) => {\r\n    updateDishItemRequest(\r\n      {\r\n        url: `https://mensa-app-80da4-default-rtdb.firebaseio.com/dishes/${props.item.id}.json`,\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: {\r\n          name: updatedDishItem.name,\r\n          description: updatedDishItem.description,\r\n          price: +updatedDishItem.price,\r\n        },\r\n      },\r\n      updateDishItemResponse.bind(null, updatedDishItem) // bind() => for pre-configuration\r\n    );\r\n  };\r\n\r\n  // To show the update form in the modal. re-use the NewDishItemForm Component\r\n  const updateFormModal = (\r\n    <Fragment>\r\n      <NewDishItemForm item={props.item} onConfirm={updateDishItemHandler} />\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  // immidiately after sending the request\r\n  const isUpdatingModal = (\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  );\r\n\r\n  // When the request is sent successfully\r\n  const didUpdateModal = (\r\n    <Fragment>\r\n      <p>\r\n        The Dish item is updated successfully! Reload the page to see changes!\r\n      </p>\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideModalHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const errorUpdatingModal = (\r\n    <div className={classes.actions}>\r\n      <p className={classes.invalid}>{updateError}</p>\r\n    </div>\r\n  );\r\n\r\n  const deleteDishItem = () => {\r\n    setCallDeleteComponent(true);\r\n  };\r\n  //   console.log(\"callDeleteC. - deleteDishItem: \", callDeleteComponent);\r\n\r\n  // render the delete component with state\r\n  const deleteComponent = (\r\n    <DeleteDishItem\r\n      id={props.item.id}\r\n      callDeleteState={setCallDeleteComponent}\r\n      // one state up to its' parent component\r\n      deleteById={props.onDelete}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button buttonStyle=\"button--edit\" onClick={showUpdateModal}>\r\n        Update\r\n      </Button>\r\n      <Button buttonStyle=\"button--delete\" onClick={deleteDishItem}>\r\n        Delete\r\n      </Button>\r\n      {isModalOn && (\r\n        <Modal onClose={hideModalHandler}>\r\n          {!isUpdating && !didUpdate && updateFormModal}\r\n          {isUpdating && isUpdatingModal}\r\n          {!isUpdating && didUpdate && didUpdateModal}\r\n          {updateError && errorUpdatingModal}\r\n        </Modal>\r\n      )}\r\n      {callDeleteComponent && deleteComponent}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DishItemActions;\r\n","import { useRef, useState } from \"react\";\r\nimport Button from \"../../UI/FormFields/Button\";\r\nimport classes from \"./DishItemForm.module.css\";\r\n\r\nconst DishItemForm = (props) => {\r\n  const amountInputRef = useRef();\r\n\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount; // convert a string to a number\r\n\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <div className={classes.input}>\r\n        <label htmlFor={props.id}>Amount</label>\r\n        <input\r\n          id={`amount_${props.id}`}\r\n          ref={amountInputRef}\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"5\"\r\n          step=\"1\"\r\n          defaultValue=\"1\"\r\n        />\r\n      </div>\r\n      <Button type=\"submit\">+ Add</Button>\r\n      {!amountIsValid && <p>Please enter a valid amount(1-5)</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DishItemForm;\r\n","import { useContext, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport CartContext from \"../../../store/cart-context\";\r\nimport Rating from \"../../Reviews/Rating\";\r\nimport classes from \"./DishItem.module.css\";\r\nimport DishItemActions from \"./DishItemActions\";\r\nimport DishItemForm from \"./DishItemForm\";\r\n\r\nconst DishItem = (props) => {\r\n  // state declaration to show update value in client site\r\n  const [itemState, setItemState] = useState({\r\n    id: props.id,\r\n    name: props.name,\r\n    price: props.price,\r\n    description: props.description,\r\n  });\r\n\r\n  const location = useLocation();\r\n  const urlPattern = /admin+\\W*/;\r\n  const adminUrl = urlPattern.test(location.pathname);\r\n\r\n  const price = `€${Number(itemState.price).toFixed(2)}`;\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const addToCartHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      amount: amount,\r\n      price: props.price,\r\n    });\r\n  };\r\n\r\n  const dishItem = {\r\n    id: itemState.id,\r\n    name: itemState.name,\r\n    price: itemState.price,\r\n    description: itemState.description,\r\n  };\r\n\r\n  // update value in client site -- not in server site\r\n  const updateItemHandler = (updatedItem) => {\r\n    setItemState(updatedItem);\r\n  };\r\n\r\n  return (\r\n    <li className={classes.dish}>\r\n      <div>\r\n        {adminUrl ? (\r\n          <h3>{itemState.name}</h3>\r\n        ) : (\r\n          <Link to={`/dishes/${props.id}`}>\r\n            <h3>{itemState.name}</h3>\r\n          </Link>\r\n        )}\r\n        <div className={classes.description}>{itemState.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n        <Rating dishItemId={props.id} />\r\n      </div>\r\n      <div>\r\n        {adminUrl && (\r\n          <DishItemActions\r\n            item={dishItem}\r\n            onUpdateItem={updateItemHandler}\r\n            // one state up to its' parent component\r\n            onDelete={props.onDeleteItem}\r\n          />\r\n        )}\r\n        {!adminUrl && (\r\n          <DishItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DishItem;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__HtLmJ\",\"modal\":\"Modal_modal__2L3_b\",\"slide-down\":\"Modal_slide-down__19PJI\",\"content\":\"Modal_content__G3IwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dish\":\"DishItem_dish__2Aya-\",\"description\":\"DishItem_description__2dLwp\",\"price\":\"DishItem_price__HVKAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DishItemForm_form__1ySFI\",\"input\":\"DishItemForm_input__HEXzg\"};","import classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const price = `€${Number(props.price).toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h3>{props.name}</h3>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useContext } from \"react\";\r\nimport useInput from \"../../hooks/use-input\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Button from \"../UI/FormFields/Button\";\r\nimport Input from \"../UI/FormFields/Input\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\n// some validation rules\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  // our custom useInput hook for name input\r\n  const {\r\n    value: nameValue,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n\r\n  // our custom useInput hook for street input\r\n  const {\r\n    value: streetValue,\r\n    isValid: streetIsValid,\r\n    hasError: streetHasError,\r\n    valueChangeHandler: streetChangeHandler,\r\n    inputBlurHandler: streetBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n\r\n  // our custom useInput hook for city input\r\n  const {\r\n    value: cityValue,\r\n    isValid: cityIsValid,\r\n    hasError: cityHasError,\r\n    valueChangeHandler: cityChangeHandler,\r\n    inputBlurHandler: cityBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n\r\n  // our custom useInput hook for post code input\r\n  const {\r\n    value: postCodeValue,\r\n    isValid: postCodeIsValid,\r\n    hasError: postCodeHasError,\r\n    valueChangeHandler: postCodeChangeHandler,\r\n    inputBlurHandler: postCodeBlurHandler,\r\n  } = useInput(isFiveChars);\r\n\r\n  // Check if all the inputs are valid\r\n  let formIsValid = false;\r\n  if (nameIsValid && streetIsValid && cityIsValid && postCodeIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: nameValue,\r\n      street: streetValue,\r\n      city: cityValue,\r\n      postalCode: postCodeValue,\r\n    });\r\n  };\r\n\r\n  const cartCancelHandler = () => {\r\n    cartCtx.cartVisibility();\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={formSubmitHandler}>\r\n      <Input\r\n        id=\"name\"\r\n        type=\"text\"\r\n        label=\"Enter Name\"\r\n        value={nameValue}\r\n        onChange={nameChangeHandler}\r\n        onBlur={nameBlurHandler}\r\n        errorStyling={nameHasError}\r\n      />\r\n      {nameHasError && (\r\n        <p className={classes.invalid}>Please enter a valid name!</p>\r\n      )}\r\n      <Input\r\n        id=\"street\"\r\n        type=\"text\"\r\n        label=\"Street and House Number\"\r\n        value={streetValue}\r\n        onChange={streetChangeHandler}\r\n        onBlur={streetBlurHandler}\r\n        errorStyling={streetHasError}\r\n      />\r\n      {streetHasError && (\r\n        <p className={classes.invalid}>\r\n          Please enter a street and house number!\r\n        </p>\r\n      )}\r\n      <Input\r\n        type=\"text\"\r\n        id=\"postal\"\r\n        label=\"Postal Code\"\r\n        value={postCodeValue}\r\n        onChange={postCodeChangeHandler}\r\n        onBlur={postCodeBlurHandler}\r\n        errorStyling={postCodeHasError}\r\n      />\r\n      {postCodeHasError && (\r\n        <p className={classes.invalid}>Please enter a 5 digit postal code!</p>\r\n      )}\r\n      <Input\r\n        type=\"text\"\r\n        id=\"city\"\r\n        label=\"City\"\r\n        value={cityValue}\r\n        onChange={cityChangeHandler}\r\n        onBlur={cityBlurHandler}\r\n        errorStyling={cityHasError}\r\n      />\r\n      {cityHasError && (\r\n        <p className={classes.invalid}>Please enter a valid city!</p>\r\n      )}\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={cartCancelHandler}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\" disabled={!formIsValid}>\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useContext, useState } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Button from \"../UI/FormFields/Button\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  // Destructuring from useHttp custom hook for processing post request (send data)\r\n  const {\r\n    isLoading: isSubmitting,\r\n    error: submitError,\r\n    sendRequest: sendOrderRequest,\r\n  } = useHttp();\r\n\r\n  const totalAmount = `€${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    cartCtx.cartVisibility();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <Button buttonStyle=\"button--cancel\" onClick={hideCartHandler}>\r\n        Close\r\n      </Button>\r\n      {hasItems && <Button onClick={orderHandler}>Order</Button>}\r\n    </div>\r\n  );\r\n\r\n  const createOrder = (userData) => {\r\n    if (userData.name) {\r\n      // 'name' => is 'id' in firebase\r\n      setDidSubmit(true);\r\n      console.log(userData);\r\n      cartCtx.clearCart();\r\n    }\r\n  };\r\n\r\n  // After getting the data form the Checkout (children component) form\r\n  const submitOrderHandler = async (userData) => {\r\n    sendOrderRequest(\r\n      {\r\n        url: \"https://mensa-app-80da4-default-rtdb.firebaseio.com/orders.json\",\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: {\r\n          user: userData,\r\n          dishItems: cartCtx.items,\r\n          status: \"pending\",\r\n        },\r\n      },\r\n      createOrder.bind(null, userData) // bind() => for pre-configuration\r\n    );\r\n    // setDidSubmit(true);\r\n  };\r\n\r\n  // When the users data is not submitted\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && <Checkout onConfirm={submitOrderHandler} />}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  // immidiately after sending the requwst\r\n  const isSubmittingModalContent = (\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  );\r\n  // When the request is successfully sent\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>\r\n        Yor order is successful! Your meal will be delivered within 30 minutes\r\n      </p>\r\n      <div className={classes.actions}>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideCartHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const errorSubmittedModalContent = (\r\n    <React.Fragment>\r\n      <div className={classes.actions}>\r\n        <p>{submitError}</p>\r\n        <Button buttonStyle=\"button--cancel\" onClick={hideCartHandler}>\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={hideCartHandler}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n      {submitError && errorSubmittedModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__1rUEe\",\"total\":\"Cart_total__3frEX\",\"actions\":\"Cart_actions__2Zo41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__29L9L\",\"summary\":\"CartItem_summary__3s_N6\",\"price\":\"CartItem_price__PYKFP\",\"amount\":\"CartItem_amount__1ELSD\",\"actions\":\"CartItem_actions__3zLD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__3KU0H\",\"actions\":\"Checkout_actions__3NBbt\",\"invalid\":\"Checkout_invalid__1GBqN\"};"],"sourceRoot":""}